@page "/Company"
@page "/Company/{id}"
@inject ICompanyService CompanyService
@inject ISegmentoService SegmentoService
@inject NavigationManager NavigationManager


@if (Id == null)
{
    <PageTitle>Adicione um empresa</PageTitle>
    <h3>Adicione um empresa</h3>
}
else
{
    <PageTitle>Edit </PageTitle>
    <h3>Edit @_company.Nome</h3>
}

<EditForm Model="_company" OnSubmit="HandleSubmit">
    <div>
        <label for="nome">Nome</label>
        <InputText id="nome" @bind-Value="_company.Nome" class="form-control"></InputText>
    </div>
    <div>
        <label for="site">Site</label>
        <InputText id="site" @bind-Value="_company.Site" class="form-control"></InputText>
    </div>
    <div>
        <label for="segmento">Segmento</label>
        <InputSelect id="segmento" @bind-Value="_company.Segmento.oid" class="form-select">
            @if (SegmentoService.Segmentos != null)
            {
                foreach (var segmento in SegmentoService.Segmentos)
                {
                    <option value="@segmento.Id.oid">@segmento.Nome</option>
                }
            }
        </InputSelect>
    </div>
    <div class="form-check form-switch">
        <InputCheckbox id="ativo" @bind-Value="_company.Active" class="form-check-input"></InputCheckbox>
        <label class="form-check-label" for="ativo">Ativo</label>
    </div>
    <br/>
    <button type="submit" class="btn btn-primary">@_btnText</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancelar</button>
</EditForm>

@code {

    [Parameter]
    public string? Id { get; set; }

    private Company _company = new Company { Segmento = new Id { oid = "asdfasdfasdfasdf", } };

    string _btnText = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        _btnText = Id == null ? "Salvar nova empresa" : "Editar empresa";
        await SegmentoService.GetSegmentos();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
        }
        else
        {
            _company = await CompanyService.GetCompany(Id);
        }
    }

    private async Task HandleSubmit()
    {
        if (Id != null) await CompanyService.UpdateCompany(Id, _company);
        else
        {
            await CompanyService.CreateCompany(_company);
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/");  
    }

}